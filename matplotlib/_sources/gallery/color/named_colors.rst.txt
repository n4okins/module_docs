
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/color/named_colors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. meta::
        :keywords: codex

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_color_named_colors.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_color_named_colors.py:


====================
List of named colors
====================

This plots a list of the named colors supported in matplotlib.
For more information on colors in matplotlib see

* the :doc:`/tutorials/colors/colors` tutorial;
* the `matplotlib.colors` API;
* the :doc:`/gallery/color/color_demo`.

----------------------------
Helper Function for Plotting
----------------------------
First we define a helper function for making a table of colors, then we use it
on some common color categories.

.. GENERATED FROM PYTHON SOURCE LINES 19-76

.. code-block:: default


    import math

    from matplotlib.patches import Rectangle
    import matplotlib.pyplot as plt
    import matplotlib.colors as mcolors


    def plot_colortable(colors, *, ncols=4, sort_colors=True):

        cell_width = 212
        cell_height = 22
        swatch_width = 48
        margin = 12

        # Sort colors by hue, saturation, value and name.
        if sort_colors is True:
            names = sorted(
                colors, key=lambda c: tuple(mcolors.rgb_to_hsv(mcolors.to_rgb(c))))
        else:
            names = list(colors)

        n = len(names)
        nrows = math.ceil(n / ncols)

        width = cell_width * 4 + 2 * margin
        height = cell_height * nrows + 2 * margin
        dpi = 72

        fig, ax = plt.subplots(figsize=(width / dpi, height / dpi), dpi=dpi)
        fig.subplots_adjust(margin/width, margin/height,
                            (width-margin)/width, (height-margin)/height)
        ax.set_xlim(0, cell_width * 4)
        ax.set_ylim(cell_height * (nrows-0.5), -cell_height/2.)
        ax.yaxis.set_visible(False)
        ax.xaxis.set_visible(False)
        ax.set_axis_off()

        for i, name in enumerate(names):
            row = i % nrows
            col = i // nrows
            y = row * cell_height

            swatch_start_x = cell_width * col
            text_pos_x = cell_width * col + swatch_width + 7

            ax.text(text_pos_x, y, name, fontsize=14,
                    horizontalalignment='left',
                    verticalalignment='center')

            ax.add_patch(
                Rectangle(xy=(swatch_start_x, y-9), width=swatch_width,
                          height=18, facecolor=colors[name], edgecolor='0.7')
            )

        return fig








.. GENERATED FROM PYTHON SOURCE LINES 77-80

-----------
Base colors
-----------

.. GENERATED FROM PYTHON SOURCE LINES 80-83

.. code-block:: default


    plot_colortable(mcolors.BASE_COLORS, ncols=3, sort_colors=False)




.. image-sg:: /gallery/color/images/sphx_glr_named_colors_001.png
   :alt: named colors
   :srcset: /gallery/color/images/sphx_glr_named_colors_001.png, /gallery/color/images/sphx_glr_named_colors_001_2_0x.png 2.0x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 84-87

---------------
Tableau Palette
---------------

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: default


    plot_colortable(mcolors.TABLEAU_COLORS, ncols=2, sort_colors=False)




.. image-sg:: /gallery/color/images/sphx_glr_named_colors_002.png
   :alt: named colors
   :srcset: /gallery/color/images/sphx_glr_named_colors_002.png, /gallery/color/images/sphx_glr_named_colors_002_2_0x.png 2.0x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-94

----------
CSS Colors
----------

.. GENERATED FROM PYTHON SOURCE LINES 94-98

.. code-block:: default


    plot_colortable(mcolors.CSS4_COLORS)
    plt.show()




.. image-sg:: /gallery/color/images/sphx_glr_named_colors_003.png
   :alt: named colors
   :srcset: /gallery/color/images/sphx_glr_named_colors_003.png, /gallery/color/images/sphx_glr_named_colors_003_2_0x.png 2.0x
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 100-121

-----------
XKCD Colors
-----------
XKCD colors are supported, but they produce a large figure, so we skip them
for now. You can use the following code if desired::

    xkcd_fig = plot_colortable(mcolors.XKCD_COLORS)
    xkcd_fig.savefig("XKCD_Colors.png")

.. admonition:: References

   The use of the following functions, methods, classes and modules is shown
   in this example:

   - `matplotlib.colors`
   - `matplotlib.colors.rgb_to_hsv`
   - `matplotlib.colors.to_rgba`
   - `matplotlib.figure.Figure.get_size_inches`
   - `matplotlib.figure.Figure.subplots_adjust`
   - `matplotlib.axes.Axes.text`
   - `matplotlib.patches.Rectangle`


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.502 seconds)


.. _sphx_glr_download_gallery_color_named_colors.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: named_colors.py <named_colors.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: named_colors.ipynb <named_colors.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
